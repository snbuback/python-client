# coding: utf-8

"""
    Wavefront REST API

    <p>The Wavefront REST API enables you to interact with Wavefront servers using standard REST API tools. You can use the REST API to automate commonly executed operations such as automatically tagging sources.</p><p>When you make REST API calls outside the Wavefront REST API documentation you must add the header \"Authorization: Bearer &lt;&lt;API-TOKEN&gt;&gt;\" to your HTTP requests.</p>  # noqa: E501

    OpenAPI spec version: v2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import wavefront_api_client
from wavefront_api_client.api.anomaly_api import AnomalyApi  # noqa: E501
from wavefront_api_client.rest import ApiException


class TestAnomalyApi(unittest.TestCase):
    """AnomalyApi unit test stubs"""

    def setUp(self):
        self.api = wavefront_api_client.api.anomaly_api.AnomalyApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_get_all_anomalies(self):
        """Test case for get_all_anomalies

        Get all anomalies for a customer during a time interval  # noqa: E501
        """
        pass

    def test_get_anomalies_for_chart_and_param_hash(self):
        """Test case for get_anomalies_for_chart_and_param_hash

        Get all anomalies for a chart with a set of dashboard parameters during a time interval  # noqa: E501
        """
        pass

    def test_get_chart_anomalies(self):
        """Test case for get_chart_anomalies

        Get all anomalies for a dashboard that does not have any dashboard parameters during a time interval  # noqa: E501
        """
        pass

    def test_get_chart_anomalies_0(self):
        """Test case for get_chart_anomalies_0

        Get all anomalies for a chart during a time interval  # noqa: E501
        """
        pass

    def test_get_dashboard_anomalies(self):
        """Test case for get_dashboard_anomalies

        Get all anomalies for a dashboard with a particular set of dashboard parameters as identified by paramHash, during a time interval  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
